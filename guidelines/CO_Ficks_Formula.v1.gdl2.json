{
  "id": "CO_Ficks_Formula.v1",
  "gdl_version": "2.0",
  "concept": "gt0001",
  "language": {
    "original_language": "ISO_639-1::en"
  },
  "description": {
    "original_author": {
      "date": "2020-07-06",
      "name": "Rosario Silva Sepulveda",
      "organisation": "Cambio CDS",
      "email": "rosario.sepulveda@outlook.com"
    },
    "other_contributors": [
      "Maryam Razavi"
    ],
    "lifecycle_state": "Author draft",
    "details": {
      "en": {
        "id": "en",
        "purpose": "To calculate Cardiac Output using Fick’s Formula for CO, CI and SV.",
        "keywords": [
          "Cardiac Output",
          "Cardiac Index",
          "Stroke Volume",
          "BSA",
          "CO",
          "CI",
          "SV",
          "Body surface area",
          "Cardiac",
          "output"
        ],
        "use": "Cardiac output Fick's formula can be used for patients with suspected cardiogenic shock and a pulmonary artery catheter in place and, patients undergoing right or left heart catheterization.\n\nFick's formulas for determining cardiac output, cardiac index, and stroke volume is: \n- Cardiac Output (CO), L/min=  O2 consumption (VO2)/ (A-V) O2 content difference, where: in patients <70 years, VO2   mL/min/m2= 125 mL O2/min * BSA, and in patients >=70 years, VO2  mL/min/m2= 110 mL O2/min * BSA.\n- Cardiac Index (CI), L/min/m2 = CO/BSA\n- Stroke Volume (SV), mL/beat = CO/HR\n\nBSA and AV-O2 content difference are calculated as follows:\n- Body Surface Area (BSA), m2= [(Height, cm x Weight, kg)/ 3,600 ]^0.5\n- Arterovenous O2 content difference (AV-O2)= (SaO2-SvO2)*Hb*13.6\n\nSaO2 should be acquired by arterial blood gas measurement. SvO2 should be acquired by mixed venous gas from pulmonary artery catheter. The formula assumes decimal values, not percentages.",
        "misuse": "Cardiac output Fick's formula cannot be used in the presence of intracardiac shunts.\nFick’s method is less reliable in patients with pulmonary hypertension, heart failure, or abnormal body habitus.",
        "copyright": "© Cambio CDS"
      }
    },
    "other_details": {
      "references": "Ragosta M. Textbook of Clinical Hemodynamics. 2nd edition. Philadelphia: Elsevier; 2017. 328 p.\n\nLaFarge CG, Miettinen OS. The estimation of oxygen consumption. Cardiovasc Res. 1970 Jan;4(1):23-30. doi: 10.1093/cvr/4.1.23. PMID: 5416840."
    }
  },
  "definition": {
    "data_bindings": {
      "gt0002": {
        "id": "gt0002",
        "model_id": "openEHR-EHR-OBSERVATION.body_weight.v2",
        "template_id": "openEHR-EHR-OBSERVATION.body_weight.v2",
        "type": "INPUT",
        "elements": {
          "gt0003": {
            "id": "gt0003",
            "path": "/data[at0002]/events[at0003]/data[at0001]/items[at0004]"
          }
        }
      },
      "gt0004": {
        "id": "gt0004",
        "model_id": "openEHR-EHR-OBSERVATION.height.v2",
        "template_id": "openEHR-EHR-OBSERVATION.height.v2",
        "type": "INPUT",
        "elements": {
          "gt0005": {
            "id": "gt0005",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0004]"
          }
        }
      },
      "gt0008": {
        "id": "gt0008",
        "model_id": "openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1",
        "template_id": "openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1",
        "type": "INPUT",
        "elements": {
          "gt0009": {
            "id": "gt0009",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0078.7]"
          }
        }
      },
      "gt0010": {
        "id": "gt0010",
        "model_id": "openEHR-EHR-OBSERVATION.co_ficks_formula.v0",
        "template_id": "openEHR-EHR-OBSERVATION.co_ficks_formula.v0",
        "type": "INPUT",
        "elements": {
          "gt0011": {
            "id": "gt0011",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0005]"
          },
          "gt0059": {
            "id": "gt0059",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0006]"
          }
        }
      },
      "gt0012": {
        "id": "gt0012",
        "model_id": "openEHR-EHR-OBSERVATION.lab_test-full_blood_count.v1",
        "template_id": "openEHR-EHR-OBSERVATION.lab_test-full_blood_count.v1",
        "type": "INPUT",
        "elements": {
          "gt0013": {
            "id": "gt0013",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0078.4]"
          }
        }
      },
      "gt0014": {
        "id": "gt0014",
        "model_id": "openEHR-EHR-OBSERVATION.pulse.v2",
        "template_id": "openEHR-EHR-OBSERVATION.pulse.v2",
        "type": "INPUT",
        "elements": {
          "gt0015": {
            "id": "gt0015",
            "path": "/data[at0002]/events[at0003]/data[at0001]/items[at0004]"
          }
        }
      },
      "gt0018": {
        "id": "gt0018",
        "model_id": "openEHR-EHR-OBSERVATION.co_ficks_formula.v0",
        "template_id": "openEHR-EHR-OBSERVATION.co_ficks_formula.v0",
        "type": "OUTPUT",
        "elements": {
          "gt0020": {
            "id": "gt0020",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0009]"
          },
          "gt0022": {
            "id": "gt0022",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0010]"
          },
          "gt0023": {
            "id": "gt0023",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0011]"
          },
          "gt0024": {
            "id": "gt0024",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0012]"
          },
          "gt0025": {
            "id": "gt0025",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0013]"
          },
          "gt0030": {
            "id": "gt0030",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0014]"
          },
          "gt0045": {
            "id": "gt0045",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0016]"
          },
          "gt0046": {
            "id": "gt0046",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0017]"
          },
          "gt0047": {
            "id": "gt0047",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0018]"
          },
          "gt0048": {
            "id": "gt0048",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0019]"
          },
          "gt0049": {
            "id": "gt0049",
            "path": "/data[at0001]/events[at0002]/data[at0003]/items[at0020]"
          }
        }
      }
    },
    "rules": {
      "gt0062": {
        "id": "gt0062",
        "priority": 13,
        "when": [
          "$gt0003|Weight|!=null",
          "$gt0003|Weight|.unit=='[lb_av]'"
        ],
        "then": [
          "$gt0063|Weight local variable|=$gt0003.magnitude*0.45"
        ]
      },
      "gt0061": {
        "id": "gt0061",
        "priority": 12,
        "when": [
          "$gt0005|Height/Length|!=null",
          "$gt0005|Height/Length|.unit=='[in_i]'"
        ],
        "then": [
          "$gt0064|Height local variable|=$gt0005.magnitude*2.54"
        ]
      },
      "gt0066": {
        "id": "gt0066",
        "priority": 11,
        "when": [
          "$gt0005|Height/Length|!=null",
          "$gt0005|Height/Length|.unit=='cm'"
        ],
        "then": [
          "$gt0064|Height local variable|=$gt0005.magnitude"
        ]
      },
      "gt0065": {
        "id": "gt0065",
        "priority": 10,
        "when": [
          "$gt0003|Weight|!=null",
          "$gt0003|Weight|.unit=='kg'"
        ],
        "then": [
          "$gt0063|Weight local variable|=$gt0003.magnitude"
        ]
      },
      "gt0028": {
        "id": "gt0028",
        "priority": 9,
        "when": [
          "(fired($gt0062))||((fired($gt0061))||((fired($gt0066))||(fired($gt0065))))"
        ],
        "then": [
          "$gt0020|BSA Score|.magnitude=(($gt0063*$gt0064)/3600)^0.5",
          "$gt0020|BSA Score|.unit='m2'",
          "$gt0020|BSA Score|.precision=2"
        ]
      },
      "gt0026": {
        "id": "gt0026",
        "priority": 8,
        "when": [
          "$gt0059|Age|==local::at0007|<70 years|"
        ],
        "then": [
          "$gt0022|VO2|.magnitude=125*$gt0020.magnitude",
          "$gt0022|VO2|.unit='ml/min/m2'",
          "$gt0022|VO2|.precision=2"
        ]
      },
      "gt0027": {
        "id": "gt0027",
        "priority": 7,
        "when": [
          "$gt0059|Age|==local::at0008|≥70 years|"
        ],
        "then": [
          "$gt0022|VO2|.magnitude=110*$gt0020.magnitude",
          "$gt0022|VO2|.unit='ml/min/m2'",
          "$gt0022|VO2|.precision=2"
        ]
      },
      "gt0070": {
        "id": "gt0070",
        "priority": 6,
        "when": [
          "$gt0013|Hb|!=null",
          "$gt0013|Hb|.unit=='gm/dl'"
        ],
        "then": [
          "$gt0068|Hb local variable|=$gt0013.magnitude"
        ]
      },
      "gt0069": {
        "id": "gt0069",
        "priority": 5,
        "when": [
          "$gt0013|Hb|!=null",
          "$gt0013|Hb|.unit=='gm/l'"
        ],
        "then": [
          "$gt0068|Hb local variable|=$gt0013.magnitude/10"
        ]
      },
      "gt0071": {
        "id": "gt0071",
        "priority": 4,
        "when": [
          "$gt0009|SaO2|!=null",
          "$gt0011|SvO₂|!=null",
          "$gt0013|Hb|!=null"
        ],
        "then": [
          "$gt0030|AV_O2 content difference|.magnitude=(($gt0009.magnitude-$gt0011.magnitude)*$gt0068*13.6)/100",
          "$gt0030|AV_O2 content difference|.precision=2"
        ]
      },
      "gt0032": {
        "id": "gt0032",
        "priority": 3,
        "when": [
          "(fired($gt0026))||(fired($gt0027))",
          "fired($gt0071)"
        ],
        "then": [
          "$gt0023|Cardiac Output|.magnitude=$gt0022.magnitude/$gt0030.magnitude",
          "$gt0023|Cardiac Output|.precision=1",
          "$gt0023|Cardiac Output|.unit='l/min'"
        ]
      },
      "gt0033": {
        "id": "gt0033",
        "priority": 2,
        "when": [
          "fired($gt0028)",
          "fired($gt0032)"
        ],
        "then": [
          "$gt0024|Cardiac Index|.magnitude=$gt0023.magnitude/$gt0020.magnitude",
          "$gt0024|Cardiac Index|.precision=1",
          "$gt0024|Cardiac Index|.unit='l/min/m2'"
        ]
      },
      "gt0035": {
        "id": "gt0035",
        "priority": 1,
        "when": [
          "fired($gt0032)",
          "$gt0015|Heart rate|!=null"
        ],
        "then": [
          "$gt0025|Stroke Volume|.magnitude=($gt0023.magnitude*1000)/$gt0015.magnitude",
          "$gt0025|Stroke Volume|.unit='ml/beat'"
        ]
      }
    }
  },
  "ontology": {
    "term_definitions": {
      "en": {
        "id": "en",
        "terms": {
          "gt0001": {
            "id": "gt0001",
            "text": "Cardiac Output (Fick’s Formula)",
            "description": "An assessment calculator of Cardiac Output (Fick’s Formula) that calculates Cardiac Output (CO), Cardiac Index (CI), and Stroke Volume (SV)."
          },
          "gt0003": {
            "id": "gt0003",
            "text": "Weight",
            "description": "The weight of the individual."
          },
          "gt0005": {
            "id": "gt0005",
            "text": "Height/Length",
            "description": "The length of the body from crown of head to sole of foot."
          },
          "gt0009": {
            "id": "gt0009",
            "text": "SaO2",
            "description": "The saturation of haem binding with oxygen."
          },
          "gt0011": {
            "id": "gt0011",
            "text": "SvO₂",
            "description": "measured on mixed venous gas from pulmonary arthery catheter (PAC)"
          },
          "gt0013": {
            "id": "gt0013",
            "text": "Hb",
            "description": "The mass concentration of haemoglobin"
          },
          "gt0015": {
            "id": "gt0015",
            "text": "Heart rate",
            "description": "The rate, measured in beats per minute."
          },
          "gt0019": {
            "id": "gt0019",
            "text": "Age",
            "description": "*"
          },
          "gt0020": {
            "id": "gt0020",
            "text": "BSA Score",
            "description": "*"
          },
          "gt0021": {
            "id": "gt0021",
            "text": "Cardiac Output",
            "description": "*"
          },
          "gt0022": {
            "id": "gt0022",
            "text": "VO2",
            "description": "*"
          },
          "gt0023": {
            "id": "gt0023",
            "text": "Cardiac Output",
            "description": "*"
          },
          "gt0024": {
            "id": "gt0024",
            "text": "Cardiac Index",
            "description": "*"
          },
          "gt0025": {
            "id": "gt0025",
            "text": "Stroke Volume",
            "description": "*"
          },
          "gt0026": {
            "id": "gt0026",
            "text": "Set VO2 for age<70 years"
          },
          "gt0027": {
            "id": "gt0027",
            "text": "Set VO2 for age>=70"
          },
          "gt0028": {
            "id": "gt0028",
            "text": "Set BSA"
          },
          "gt0029": {
            "id": "gt0029",
            "text": "Set CO"
          },
          "gt0030": {
            "id": "gt0030",
            "text": "AV_O2 content difference",
            "description": "*"
          },
          "gt0032": {
            "id": "gt0032",
            "text": "Set Cardiac Output"
          },
          "gt0033": {
            "id": "gt0033",
            "text": "Set Cardiac Index"
          },
          "gt0034": {
            "id": "gt0034",
            "text": "Set Stroke Volume"
          },
          "gt0035": {
            "id": "gt0035",
            "text": "Set Stroke Volume"
          },
          "gt0036": {
            "id": "gt0036",
            "text": "Check validation",
            "description": "*"
          },
          "gt0042": {
            "id": "gt0042",
            "text": "Set Check validation Hb>25"
          },
          "gt0044": {
            "id": "gt0044",
            "text": "Set Check validation SaO₂>70"
          },
          "gt0045": {
            "id": "gt0045",
            "text": "SaO2 Warning",
            "description": "*"
          },
          "gt0046": {
            "id": "gt0046",
            "text": "SvO2 Warning",
            "description": "*"
          },
          "gt0047": {
            "id": "gt0047",
            "text": "Hb Warning",
            "description": "*"
          },
          "gt0048": {
            "id": "gt0048",
            "text": "Height Warning",
            "description": "*"
          },
          "gt0049": {
            "id": "gt0049",
            "text": "Hear rate Warning",
            "description": "*"
          },
          "gt0059": {
            "id": "gt0059",
            "text": "Age",
            "description": ""
          },
          "gt0061": {
            "id": "gt0061",
            "text": "Set Height from in to cm"
          },
          "gt0062": {
            "id": "gt0062",
            "text": "Set Weight from lb to kg"
          },
          "gt0063": {
            "id": "gt0063",
            "text": "Weight local variable",
            "description": ""
          },
          "gt0064": {
            "id": "gt0064",
            "text": "Height local variable",
            "description": ""
          },
          "gt0065": {
            "id": "gt0065",
            "text": "Set Weight kg"
          },
          "gt0066": {
            "id": "gt0066",
            "text": "Set Height cm"
          },
          "gt0068": {
            "id": "gt0068",
            "text": "Hb local variable",
            "description": ""
          },
          "gt0069": {
            "id": "gt0069",
            "text": "Set Hb from gm/l to gm/dl"
          },
          "gt0070": {
            "id": "gt0070",
            "text": "Set Hb gm/dl"
          },
          "gt0071": {
            "id": "gt0071",
            "text": "Set AV_O2 content difference"
          }
        }
      }
    }
  }
}